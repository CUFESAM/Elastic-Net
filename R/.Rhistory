> rec <- list(name="李明", age=30, scores=c(85, 76, 90))
rec <- list(name="李明", age=30, scores=c(85, 76, 90))
rec[[1]]
rec[[3]]
library("fasterElasticNet", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
library(ElemStatLearn)
data(prostate)
x <- prostate[,1:8]
y <- prostate[,9]
np <- dim(x)
n <- np[1]
p <- np[2]
if(is.data.frame(x)){
xn <- names(x)
}else{
xn <- paste("x",1:p,sep="")
}
x <- as.matrix(x, nrow=n, ncol=p)
xm <- apply(x,2,mean)
ym <- mean(y)
xtx <- t(x)%*%x-n*outer(xm,xm)
xty <- drop(t(x)%*%y)-n*xm*ym
b <- NULL
lambdav <- NULL
CV_mse <- NULL
com <- NULL
lambda2 = 1
k <- 30
index <- sample(c(rep(1:k, n%/%k), sample(1:k, n%%k)),n)
if( is.null(lambda2) ) lambda2 <- seq(0,1,0.1)
lambda2
lam2_seq <- lambda2
nlam <- length(lam2_seq)
mse_sum <- list()
lamsearch_list <-list()
reb_list <- list()
lamk_list <-c()
res <- elasticnet(xtx,xty,lam2 = lam2_seq[j])
j <- 1
res <- elasticnet(xtx,xty,lam2 = lam2_seq[j])
lamsearch_list[[j]] <- res$relamb
lamsearch_list
lamk_list[j] <- length(res$relamb)
lamk_list
reb_list[[j]] <- res$reb
mse_sum[[j]] <- rep(0,lamk_list[j])
reb_list
mse_sum
i <- 1
ni <- sum(index==i)
nii <- n-ni
xi <- x[index==i,,drop=FALSE]
xmi <- apply( xi , 2, mean)
yi <- y[index==i]
ymi <- mean(yi)
xmi_ <- (n*xm-ni*xmi)/nii
ymi_ <- (n*ym-ni*ymi)/nii
xixi <- sweep(xi,2,xmi,"-")
yiyi <- yi - ymi
xitxi <- xtx - t(xixi)%*%xixi - ni*n/nii*outer(xmi-xm,xmi-xm)
xityi <- xty - drop(t(xixi)%*%yiyi) - (ni*n/nii)*(ymi-ym)*(xmi-xm)
lam_b <- elasticnet(xitxi,xityi,lam2 = lam2_seq[j])
reb <- lam_b$reb
relamb <- lam_b$relamb
relamb
ymi_
reb%*%xmi_
reb0 <- ymi_ - drop(reb%*%xmi_)
drop(reb%*%xmi_)
reb0
lam_search <- lamsearch_list[[j]]
lam_search
lamk <- lamk_list[j]
if(relamb[1] < lam_search[1]){
relamb <- c(lam_search[1],relamb)
reb <- rbind(0,reb)
}
reb
relamb
lamik <- length(relamb)
lamik
lam_search
lam_search[-lamk]
xout <- apply(outer(relamb,lam_search[-lamk],">="), 2, sum)
xout
dd <- (relamb[xout]-lam_search[-lamk])/(relamb[xout]-relamb[xout+1])
dd
bapp <- rbind((reb[xout+1,]-reb[xout,])*dd+reb[xout,],reb[lamik,])
bapp
tbapp <- t(bapp)
b0lam <- ymi_ - apply(tbapp*xmi_,2,sum)
b0lam
mse_sum[[j]] <- mse_sum[[j]]+apply((sweep(xi%*%tbapp,2,b0lam,"+")-yi)^2,2,sum)
mes_sum
mse_sum
n
mmse=lapply(mse_sum,'/',n)
mmse
mmsea <- unlist(lapply(mmse,which.min))
mmsev <- unlist(lapply(mmse,min))
lambda1 <- numeric(nlam)
mmsea
mmsev
bb <- matrix(nrow=nlam, ncol=p)
bb
lambda1[i] <- lamsearch_list[[i]][mmsea[i]]
lambda1
bb[i,] <- reb_list[[i]][mmsea[i],]
bb
bb <- cbind(ym-drop(bb%*%xm),bb)
bb
comb <- cbind(lam2_seq,lambda1,mmsev,bb)
comb
minmsea <- which.min(mmsev)
minmsev <- mmsev[minmsea]
minlambda1 <- lambda1[minmsea]
minlambda1
minmsev
minb <- bb[minmsea,]
minb
bb
minmsea
load("/Users/lewincho/Packages/data/housing.rda")
remove.packages("fasterElasticNet")
install.packages('/Users/lewincho/Desktop/fasterElasticNet_1.1.2.tar.gz', repos = NULL, type = 'source')
devtools::install_github('CUFESAM/Elastic-Net')
?install_github
devtools::install_github('CUFESAM/Elastic-Net', ref = 'MacOSX')
devtools::install_github('CUFESAM/Elastic-Net', ref = 'MacOSX111')
devtools::install_github('CUFESAM/Elastic-Net', ref = 'MacOSX')
